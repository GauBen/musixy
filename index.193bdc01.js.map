{"mappings":"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","sources":["assets/app/marker.ts","assets/app/app.ts","assets/playlist.json","assets/app/home-app.ts"],"sourcesContent":["export interface MarkerSettings {\n  x: [number, number]\n  y: [number, number]\n  width: number\n  height: number\n  pixelRatio: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport type Direction = 'NE' | 'NW' | 'SE' | 'SW'\n\nexport class Vector implements Point {\n  readonly x: number\n  readonly y: number\n\n  constructor(x: number, y: number)\n  constructor(v: Vector | Point)\n  constructor(x: number | Vector | Point, y: number | undefined = undefined) {\n    if (x instanceof Vector || (x instanceof Object && 'x' in x && 'y' in x)) {\n      this.x = x.x\n      this.y = x.y\n      return\n    }\n\n    this.x = x\n    this.y = y\n  }\n\n  static orthographicProjection(\n    startPoint: Point,\n    endPoint: Point,\n    projectile: Point\n  ) {\n    const v = new Vector(endPoint).sub(startPoint).normalize()\n    return new Vector(\n      v.scale(new Vector(projectile).sub(startPoint).dot(v))\n    ).add(startPoint)\n  }\n\n  add(v: Point) {\n    return new Vector(this.x + v.x, this.y + v.y)\n  }\n\n  sub(v: Point) {\n    return new Vector(this.x - v.x, this.y - v.y)\n  }\n\n  scale(s: number) {\n    return new Vector(this.x * s, this.y * s)\n  }\n\n  rotate(theta: number) {\n    return new Vector(\n      this.x * Math.cos(theta) - this.y * Math.sin(theta),\n      this.x * Math.sin(theta) + this.y * Math.cos(theta)\n    )\n  }\n\n  len2() {\n    return this.x * this.x + this.y * this.y\n  }\n\n  len() {\n    return Math.sqrt(this.len2())\n  }\n\n  dot(v: Point) {\n    return v.x * this.x + v.y * this.y\n  }\n\n  normalize() {\n    const length = this.len()\n    if (length < Number.EPSILON || !length) {\n      throw new Error('Division by zero')\n    }\n\n    return new Vector(this.x / length, this.y / length)\n  }\n}\n\nexport class Marker {\n  protected canvas: HTMLCanvasElement\n  protected context: CanvasRenderingContext2D\n\n  protected fromX: number\n  protected fromY: number\n  protected toX: number\n  protected toY: number\n\n  protected width: number\n  protected height: number\n  protected pixelRatio: number\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    {\n      x: [fromX, toX],\n      y: [fromY, toY],\n      width,\n      height,\n      pixelRatio\n    }: MarkerSettings\n  ) {\n    this.canvas = canvas\n    this.context = canvas.getContext('2d')\n\n    this.fromX = fromX\n    this.fromY = fromY\n    this.toX = toX\n    this.toY = toY\n\n    this.resize(width, height, pixelRatio)\n    this.clear()\n  }\n\n  resize(width: number, height: number, pixelRatio: number) {\n    this.width = width\n    this.height = height\n    this.pixelRatio = pixelRatio\n\n    this.canvas.width = width * pixelRatio\n    this.canvas.height = height * pixelRatio\n    this.canvas.style.width = `${width}px`\n    this.canvas.style.height = `${height}px`\n\n    this.context.lineWidth = 3 * pixelRatio\n  }\n\n  clear() {\n    this.context.clearRect(\n      0,\n      0,\n      this.width * this.pixelRatio,\n      this.height * this.pixelRatio\n    )\n    this.context.lineJoin = 'round'\n    this.context.lineCap = 'round'\n    this.context.lineWidth = 2 * this.pixelRatio\n    this.context.fillStyle = '#000'\n    this.context.strokeStyle = '#000'\n  }\n\n  drawArrow(from: Point, to: Point) {\n    const canvasFrom = this.toCanvasVector(from)\n    const canvasTo = this.toCanvasVector(to)\n    const ctx = this.context\n    const arrow = canvasTo.sub(canvasFrom).normalize()\n    ctx.beginPath()\n    ctx.moveTo(canvasFrom.x, canvasFrom.y)\n    ctx.lineTo(canvasTo.x - arrow.x * 10, canvasTo.y - arrow.y * 10)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.moveTo(canvasTo.x, canvasTo.y)\n    const firstPoint = canvasTo.add(\n      arrow.scale(20 * this.pixelRatio).rotate((3 * Math.PI) / 4)\n    )\n    const secondPoint = canvasTo.add(\n      arrow.scale(20 * this.pixelRatio).rotate((5 * Math.PI) / 4)\n    )\n    ctx.lineTo(firstPoint.x, firstPoint.y)\n    ctx.lineTo(secondPoint.x, secondPoint.y)\n    ctx.closePath()\n    ctx.fillStyle = '#000'\n    ctx.fill()\n  }\n\n  drawPolyLine(\n    points: Point[],\n    color: string | CanvasGradient | CanvasPattern = null\n  ) {\n    const ctx = this.context\n\n    let canvasVector = this.toCanvasVector(points[0])\n    ctx.beginPath()\n    ctx.moveTo(canvasVector.x, canvasVector.y)\n\n    for (const point of points.slice(1)) {\n      canvasVector = this.toCanvasVector(point)\n      ctx.lineTo(canvasVector.x, canvasVector.y)\n    }\n\n    ctx.strokeStyle = color\n    ctx.stroke()\n  }\n\n  drawPoint(\n    point: Point,\n    radius = 10,\n    color: string | CanvasGradient | CanvasPattern = null\n  ) {\n    const ctx = this.context\n\n    const center = this.toCanvasVector(point)\n    ctx.beginPath()\n    ctx.arc(center.x, center.y, radius * this.pixelRatio, 0, 7, false)\n    ctx.fillStyle = '#fff'\n    ctx.fill()\n    ctx.strokeStyle = color\n    ctx.lineWidth = (radius / 2.5) * this.pixelRatio\n    ctx.stroke()\n  }\n\n  drawText(text: string, point: Point, direction: Direction) {\n    const ctx = this.context\n    const margin = 5 * this.pixelRatio\n    const h = 20 * this.pixelRatio\n    ctx.font = `${h}px \"Segoe UI\"`\n    const vect = this.toCanvasVector(point)\n    const w = ctx.measureText(text).width\n\n    switch (direction) {\n      case 'NE':\n        ctx.fillText(text, vect.x + margin, vect.y - margin)\n        break\n\n      case 'NW':\n        ctx.fillText(text, vect.x - w - margin, vect.y - margin)\n        break\n\n      case 'SE':\n        ctx.fillText(text, vect.x + margin, vect.y + h + margin)\n        break\n\n      case 'SW':\n        ctx.fillText(text, vect.x - w - margin, vect.y + h + margin)\n        break\n\n      default:\n        throw new Error('Invalid argument for type Direction')\n    }\n  }\n\n  toCanvasVector(point: Point): Vector {\n    return new Vector(\n      ((point.x - this.fromX) / (this.toX - this.fromX)) *\n        this.width *\n        this.pixelRatio,\n      ((-point.y - this.fromY) / (this.toY - this.fromY)) *\n        this.height *\n        this.pixelRatio\n    )\n  }\n\n  fromCanvasPoint(point: Point): Vector {\n    return new Vector(\n      (point.x / this.width) * (this.toX - this.fromX) + this.fromX,\n      (1 - point.y / this.height) * (this.toY - this.fromY) + this.fromY\n    )\n  }\n}\n","import {Marker, Point} from './marker'\n\nexport type Playlist = Array<{\n  x: number\n  y: number\n  youtubeId: string\n  title: string\n  artist: string\n  duration: number\n}>\n\nexport type ContributionData = {\n  x: number\n  y: number\n  youtubeId: string\n  token?: string\n}\n\nexport type MakePlaylistData = {\n  from: Point\n  to: Point\n  duration: number\n  token?: string\n}\n\nexport type state = Promise<() => state>\n\nexport const listen = async <K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  eventName: K\n) =>\n  new Promise<HTMLElementEventMap[K]>((resolve) => {\n    element.addEventListener(\n      eventName,\n      (event) => {\n        resolve(event)\n      },\n      {once: true}\n    )\n  })\n\nexport const escapeHtml = (string: string) =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n\nexport abstract class App {\n  protected board: HTMLCanvasElement\n  protected marker: Marker\n\n  constructor(board: HTMLCanvasElement) {\n    this.board = board\n    this.marker = new Marker(board, {\n      x: [-1, 1],\n      y: [-1, 1],\n      width: 400,\n      height: 400,\n      pixelRatio: window.devicePixelRatio\n    })\n    this.init()\n  }\n\n  init() {\n    this.marker.clear()\n    this.marker.drawArrow({x: -0.98, y: 0}, {x: 0.98, y: 0})\n    this.marker.drawArrow({x: 0, y: -0.98}, {x: 0, y: 0.98})\n    this.marker.drawText('Sad', {x: -0.03, y: -1}, 'NW')\n    this.marker.drawText('Happy', {x: -0.08, y: 1}, 'SW')\n    this.marker.drawText('Calm', {x: -1, y: 0}, 'SE')\n    this.marker.drawText('Energetic', {x: 0.9, y: 0}, 'SW')\n  }\n\n  run() {\n    throw new Error('Unimplemented exception')\n  }\n}\n","module.exports = JSON.parse(\"[{\\\"x\\\":-0.6,\\\"y\\\":-0.55,\\\"youtubeId\\\":\\\"RbDsOdxZZ94\\\",\\\"title\\\":\\\"My Way\\\",\\\"artist\\\":\\\"Tom Walker\\\",\\\"duration\\\":237},{\\\"x\\\":-0.5,\\\"y\\\":-0.5,\\\"youtubeId\\\":\\\"cO3UI8T4O5M\\\",\\\"title\\\":\\\"Drugs\\\",\\\"artist\\\":\\\"EDEN\\\",\\\"duration\\\":339},{\\\"x\\\":-0.2,\\\"y\\\":-0.3,\\\"youtubeId\\\":\\\"hiOkMt7iJ7g\\\",\\\"title\\\":\\\"Enough\\\",\\\"artist\\\":\\\"The Tech Thieves\\\",\\\"duration\\\":202},{\\\"x\\\":0.1,\\\"y\\\":0.05,\\\"youtubeId\\\":\\\"Fxnl4L8vfKA\\\",\\\"title\\\":\\\"Kings & Queens\\\",\\\"artist\\\":\\\"Mat Kearney\\\",\\\"duration\\\":190},{\\\"x\\\":0.2,\\\"y\\\":0.2,\\\"youtubeId\\\":\\\"Z47pGUpMy-E\\\",\\\"title\\\":\\\"Wake Up\\\",\\\"artist\\\":\\\"EDEN\\\",\\\"duration\\\":280},{\\\"x\\\":0.5,\\\"y\\\":0.3,\\\"youtubeId\\\":\\\"FVFf1-oBl8c\\\",\\\"title\\\":\\\"Play Me Like A Violin\\\",\\\"artist\\\":\\\"Stephen\\\",\\\"duration\\\":233},{\\\"x\\\":0.6,\\\"y\\\":0.5,\\\"youtubeId\\\":\\\"mZE6giedL3Q\\\",\\\"title\\\":\\\"Reason\\\",\\\"artist\\\":\\\"Matthew Chaim\\\",\\\"duration\\\":201},{\\\"x\\\":0.9,\\\"y\\\":0.9,\\\"youtubeId\\\":\\\"dQw4w9WgXcQ\\\",\\\"title\\\":\\\"Never Gonna Give You Up\\\",\\\"artist\\\":\\\"Rick Astley\\\",\\\"duration\\\":212},{\\\"x\\\":0.95,\\\"y\\\":0.5,\\\"youtubeId\\\":\\\"UkkdaPxRR1k\\\",\\\"title\\\":\\\"Upload Your Mind :: Download My Soul\\\",\\\"artist\\\":\\\"Camellia\\\",\\\"duration\\\":134},{\\\"x\\\":0.4,\\\"y\\\":0.1,\\\"youtubeId\\\":\\\"-xX6aeaoHR0\\\",\\\"title\\\":\\\"Control\\\",\\\"artist\\\":\\\"Aaron Taos\\\",\\\"duration\\\":184}]\");","import {Point, Vector} from './marker'\nimport {App, state, Playlist, escapeHtml, listen} from './app'\nimport allSongs from '../playlist.json'\n\nexport class HomeApp extends App {\n  $duration: HTMLInputElement\n  async run() {\n    this.setupSlider()\n    let state: state = this.initialState()\n    while (true) {\n      const transition: () => state = await state\n      state = transition()\n    }\n  }\n\n  setupSlider() {\n    this.$duration = document.querySelector('#duration')\n    const $tooltip = document.querySelector('#duration-tooltip')\n    this.$duration.addEventListener('input', () => {\n      $tooltip.innerHTML = `${this.$duration.value} min`\n    })\n  }\n\n  async initialState(): state {\n    const event = await listen(this.board, 'click')\n    const point: Vector = this.marker.fromCanvasPoint({\n      x: event.offsetX,\n      y: event.offsetY\n    })\n    return async () => this.state2(point)\n  }\n\n  async state2(lastPoint: Vector): state {\n    const drawArrow = (event: MouseEvent) => {\n      const point: Vector = this.marker.fromCanvasPoint({\n        x: event.offsetX,\n        y: event.offsetY\n      })\n      this.init()\n      if (lastPoint.sub(point).len() >= Number.EPSILON)\n        this.marker.drawArrow(lastPoint, point)\n    }\n\n    this.board.addEventListener('mousemove', drawArrow)\n\n    const event = await listen(this.board, 'click')\n    const point: Vector = this.marker.fromCanvasPoint({\n      x: event.offsetX,\n      y: event.offsetY\n    })\n    this.board.removeEventListener('mousemove', drawArrow)\n    if (lastPoint.sub(point).len() <= Number.EPSILON)\n      return async () => this.state2(point)\n    return async () => this.fetchPlaylist(lastPoint, point)\n  }\n\n  async fetchPlaylist(from: Vector, to: Vector): state {\n    this.init()\n    this.marker.drawArrow(from, to)\n    let duration = 60 * Number(this.$duration.value)\n    const playlist = []\n    const projections: Array<[number, Vector, any]> = []\n    const songs: Playlist = allSongs.slice()\n\n    let startSong = songs[0]\n    let startSongDistance = from.sub(startSong).len2()\n    let endSong = songs[0]\n    let endSongDistance = to.sub(endSong).len2()\n\n    for (const song of songs) {\n      const projection = Vector.orthographicProjection(from, to, song)\n      const projectionLength2 = projection.sub(new Vector(song)).len2()\n      projections.push([projectionLength2, projection, song])\n      if (from.sub(song).len2() < startSongDistance) {\n        startSong = song\n        startSongDistance = from.sub(song).len2()\n      }\n\n      if (to.sub(song).len2() < endSongDistance) {\n        endSong = song\n        endSongDistance = to.sub(song).len2()\n      }\n    }\n\n    projections.sort((a, b) => {\n      const [p1] = a\n      const [p2] = b\n      return p1 - p2\n    })\n\n    const sections: Array<[number, Vector, Vector]> = [\n      [to.sub(from).len2(), from, to]\n    ]\n\n    while (duration > 0 && sections.length > 0) {\n      let maxSectionLength = sections[0][0]\n      let maxSection = sections[0]\n      let maxI = 0\n      for (const [i, section] of sections.slice(1).entries()) {\n        if (section[0] > maxSectionLength) {\n          maxSection = section\n          maxSectionLength = section[0]\n          maxI = i + 1\n        }\n      }\n\n      sections.splice(maxI, 1)\n\n      const from = maxSection[1]\n      const to = maxSection[2]\n\n      for (const [i, [, projection, song]] of projections.entries()) {\n        if (song === startSong || song === endSong) continue\n        const t = projection.sub(from).dot(to.sub(from)) / to.sub(from).len2()\n        if (t <= 0 || t >= 1) continue\n        projections.splice(i, 1)\n        song.projection = projection\n        playlist.push(song)\n        const section1: [number, Vector, Vector] = [\n          projection.sub(from).len2(),\n          from,\n          projection\n        ]\n        const section2: [number, Vector, Vector] = [\n          to.sub(projection).len2(),\n          projection,\n          to\n        ]\n        sections.push(section1, section2)\n        duration -= song.duration\n        break\n      }\n    }\n\n    playlist.sort((song1, song2) => {\n      return (\n        song1.projection.sub(from).len2() - song2.projection.sub(from).len2()\n      )\n    })\n    playlist.unshift(startSong)\n    if (startSong !== endSong) playlist.push(endSong)\n\n    return async () => this.displayPlaylist(from, to, playlist as Playlist)\n  }\n\n  async displayPlaylist(from: Point, to: Point, playlist: Playlist): state {\n    const $playlist = document.querySelector('#playlist')\n\n    if (playlist.length === 0) {\n      $playlist.innerHTML =\n        '<p class=\"user-instruction\"><strong>Error:</strong> the server created an empty playlist. Please retry later.</p>'\n      return async () => this.initialState()\n    }\n\n    let html = '<div class=\"wrapper\"><ul class=\"music-list\">'\n\n    for (const music of playlist) {\n      html += `<li class=\"item playlist-entry\">\n          <img class=\"cover\" src=\"https://i.ytimg.com/vi/${escapeHtml(\n            music.youtubeId\n          )}/mqdefault.jpg\" alt=\"Thumbnail\" width=\"85.33\" height=\"48\">\n          <span class=\"title\">${escapeHtml(music.title)}</span>\n          <span class=\"artist\">${escapeHtml(music.artist)}</span>\n        </li>`\n    }\n\n    html += '</ul></div>'\n    html += `<p class=\"youtube-link\"><a href=\"http://www.youtube.com/watch_videos?video_ids=${encodeURI(\n      playlist.map((music) => music.youtubeId).join(',')\n    )}\" target=\"_blank\" rel=\"noopener\">Listen on YouTube</a></p>`\n    $playlist.innerHTML = html\n\n    return async () => this.drawPlaylist(from, to, playlist)\n  }\n\n  async drawPlaylist(from: Point, to: Point, playlist: Playlist): state {\n    return new Promise((resolve) => {\n      const vectors = playlist.map((music) => new Vector(music))\n\n      const draw = (time: number) => {\n        const chain: Vector[] = []\n        let cumulatedLength = 0\n        let previous = vectors[0]\n        const dots = [previous]\n        chain.push(previous)\n\n        for (const vector of vectors.slice(1)) {\n          const delta = vector.sub(previous)\n          const length = delta.len()\n          cumulatedLength += length\n\n          if (time < cumulatedLength) {\n            chain.push(\n              previous.add(\n                delta.scale((time + length - cumulatedLength) / length)\n              )\n            )\n            break\n          }\n\n          dots.push(vector)\n          chain.push(vector)\n          previous = vector\n        }\n\n        this.init()\n        this.marker.drawArrow(from, to)\n        this.marker.drawPolyLine(chain, '#F00')\n        for (const dot of dots) this.marker.drawPoint(dot, 4)\n        return time < cumulatedLength\n      }\n\n      let start = null\n      const frame = (t: number) => {\n        if (start === null) start = t\n        if (draw((t - start) * 0.001)) {\n          requestAnimationFrame(frame)\n        } else {\n          resolve(async () => this.initialState())\n        }\n      }\n\n      requestAnimationFrame(frame)\n    })\n  }\n}\n\nconst app = new HomeApp(document.querySelector('#board'))\nvoid app.run()\n"],"names":["$fe2deee094054b1c4f73628f7e1a20fe$export$a00f0b081d75722f","x","y","Object","startPoint","endPoint","projectile","v","sub","normalize","scale","dot","add","[object Object]","this","s","theta","Math","cos","sin","sqrt","len2","length","len","Number","EPSILON","Error","$fe2deee094054b1c4f73628f7e1a20fe$export$d9f9145a3d2de879","canvas","fromX","toX","fromY","toY","width","width1","height","height1","pixelRatio","pixelRatio1","context","getContext","resize","clear","style","lineWidth","clearRect","lineJoin","lineCap","fillStyle","strokeStyle","from","to","canvasFrom","toCanvasVector","canvasTo","ctx","arrow","beginPath","moveTo","lineTo","stroke","firstPoint","rotate","PI","secondPoint","closePath","fill","points","color","canvasVector","point","slice","radius","center","arc","text","direction","margin","h","font","vect","w","measureText","fillText","$a27cc13473502718283eb3243d23c944$export$ff95bcce2965a200","async","element","eventName","Promise","resolve","addEventListener","event","once","$a27cc13473502718283eb3243d23c944$export$5e20d0a3120d6c07","string","replace","$579479ced6690141a806d9cff6d21d22$exports","JSON","parse","board","marker","window","devicePixelRatio","init","drawArrow","drawText","setupSlider","state","initialState","$duration","document","querySelector","$tooltip","innerHTML","value","fromCanvasPoint","offsetX","offsetY","state2","lastPoint","removeEventListener","fetchPlaylist","duration","playlist","projections","songs","$parcel$interopDefault","startSong","startSongDistance","endSong","endSongDistance","song","projection","orthographicProjection","projectionLength2","push","sort","a","b","p1","p2","sections","maxSectionLength","maxSection","maxI","i","section","entries","splice","i1","song1","t","section1","section2","song2","unshift","displayPlaylist","$playlist","html","music","youtubeId","title","artist","encodeURI","map","music1","join","drawPlaylist","vectors","draw","time","chain","cumulatedLength","previous","dots","vector","delta","drawPolyLine","drawPoint","start","frame","requestAnimationFrame","run"],"version":3,"file":"index.193bdc01.js.map"}