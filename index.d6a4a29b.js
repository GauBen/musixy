!function(){class t{constructor(s,e){if(s instanceof t||s instanceof Object&&"x"in s&&"y"in s)return this.x=s.x,void(this.y=s.y);this.x=s,this.y=e}static orthographicProjection(s,e,i){const a=new t(e).sub(s).normalize();return new t(a.scale(new t(i).sub(s).dot(a))).add(s)}add(s){return new t(this.x+s.x,this.y+s.y)}sub(s){return new t(this.x-s.x,this.y-s.y)}scale(s){return new t(this.x*s,this.y*s)}rotate(s){return new t(this.x*Math.cos(s)-this.y*Math.sin(s),this.x*Math.sin(s)+this.y*Math.cos(s))}len2(){return this.x*this.x+this.y*this.y}len(){return Math.sqrt(this.len2())}dot(t){return t.x*this.x+t.y*this.y}normalize(){const s=this.len();if(s<Number.EPSILON||!s)throw new Error("Division by zero");return new t(this.x/s,this.y/s)}}class s{constructor(t,{x:[s,e],y:[i,a],pixelsPerUnit:r,pixelRatio:n}){this.canvas=t,this.context=t.getContext("2d"),this.fromX=s,this.fromY=i,this.toX=e,this.toY=a,this.resize(r,n),this.clear()}resize(t,s){this.pixelsPerUnit=t,this.pixelRatio=s,this.canvas.width=(this.toX-this.fromX)*t*s,this.canvas.height=(this.toY-this.fromY)*t*s,this.canvas.style.width=(this.toX-this.fromX)*t+"px",this.canvas.style.height=(this.toY-this.fromY)*t+"px",this.context.lineWidth=3*s}clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.lineJoin="round",this.context.lineCap="round",this.context.lineWidth=2*this.pixelRatio,this.context.fillStyle="#000",this.context.strokeStyle="#000"}drawArrow(t,s){const e=this.toCanvasVector(t),i=this.toCanvasVector(s),a=this.context,r=i.sub(e).normalize();a.beginPath(),a.moveTo(e.x,e.y),a.lineTo(i.x-10*r.x,i.y-10*r.y),a.stroke(),a.beginPath(),a.moveTo(i.x,i.y);const n=i.add(r.scale(20*this.pixelRatio).rotate(3*Math.PI/4)),o=i.add(r.scale(20*this.pixelRatio).rotate(5*Math.PI/4));a.lineTo(n.x,n.y),a.lineTo(o.x,o.y),a.closePath(),a.fillStyle="#000",a.fill()}drawPolyLine(t,s=null){const e=this.context;let i=this.toCanvasVector(t[0]);e.beginPath(),e.moveTo(i.x,i.y);for(const s of t.slice(1))i=this.toCanvasVector(s),e.lineTo(i.x,i.y);e.strokeStyle=s,e.stroke()}drawPoint(t,s=10,e=null){const i=this.context,a=this.toCanvasVector(t);i.beginPath(),i.arc(a.x,a.y,s*this.pixelRatio,0,7,!1),i.fillStyle="#fff",i.fill(),i.strokeStyle=e,i.lineWidth=s/2.5*this.pixelRatio,i.stroke()}drawCircle(t,s,e=null){const i=this.context,a=s*this.pixelsPerUnit*this.pixelRatio,r=this.toCanvasVector(t);i.beginPath(),i.arc(r.x,r.y,a,0,7,!1),i.fillStyle="#fff",i.fill(),i.strokeStyle=e,i.lineWidth=2,i.stroke()}drawText(t,s,e){const i=this.context,a=5*this.pixelRatio,r=20*this.pixelRatio;i.font=`${r}px "Segoe UI"`;const n=this.toCanvasVector(s),o=i.measureText(t).width;switch(e){case"NE":i.fillText(t,n.x+a,n.y-a);break;case"NW":i.fillText(t,n.x-o-a,n.y-a);break;case"SE":i.fillText(t,n.x+a,n.y+r+a);break;case"SW":i.fillText(t,n.x-o-a,n.y+r+a);break;default:throw new Error("Invalid argument for type Direction")}}toCanvasVector(s){return new t((s.x-this.fromX)*this.pixelsPerUnit*this.pixelRatio,(-s.y-this.fromY)*this.pixelsPerUnit*this.pixelRatio)}fromCanvasPoint(s){return new t(s.x/this.pixelsPerUnit+this.fromX,(this.canvas.height-s.y)/this.pixelsPerUnit+this.fromY)}}const e=async(t,s)=>new Promise((e=>{t.addEventListener(s,(t=>{e(t)}),{once:!0})})),i=t=>t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");var a,r;(r=a||(a={}))[r.YoutubeId=0]="YoutubeId",r[r.X=1]="X",r[r.Y=2]="Y",r[r.Title=3]="Title",r[r.Artist=4]="Artist",r[r.Duration=5]="Duration";const n=s=>new t(s[a.X],s[a.Y]);new class{constructor({board:t,duration:e,tooltip:i}){this.databaseFile="./db.json",this.$board=t,this.$duration=e,this.$tooltip=i,this.marker=new s(t,{x:[-1,1],y:[-1,1],pixelsPerUnit:200,pixelRatio:window.devicePixelRatio}),this.$tooltip.innerHTML=`${this.$duration.value} min`,this.$duration.addEventListener("input",(()=>{this.$tooltip.innerHTML=`${this.$duration.value} min`}))}async run(){let t=this.loadDatabase();for(;;){t=(await t)()}}async loadDatabase(){this.state=this.loadDatabase,this.database=await(await fetch(this.databaseFile)).json();for(let t=0;t<1e3;t++)this.database.musics.push(["l0q7MLPo-u8",2*Math.random()-1,2*Math.random()-1,"The Sound of Silence","Simon & Garfunkel",187]);return this.drawAxes(),async()=>this.resetApp()}resetApp(){return document.querySelector("#playlist").innerHTML='<p class="user-instruction">Click twice on the whiteboard to create a playlist</p>',async()=>this.waitForFirstInput()}async waitForFirstInput(){return this.state=this.waitForFirstInput,Promise.race([(async()=>{const t=await e(this.$board,"click"),s=this.marker.fromCanvasPoint({x:t.offsetX,y:t.offsetY});return async()=>this.waitForSecondClick(s)})(),this.awaitReloadEvent()])}async waitForSecondClick(t){const s=s=>{const e=this.marker.fromCanvasPoint({x:s.offsetX,y:s.offsetY});this.drawAxes(),this.drawPathPreview(t,e)};this.$board.addEventListener("mousemove",s);const i=await Promise.race([(async()=>{const s=await e(this.$board,"click"),i=this.marker.fromCanvasPoint({x:s.offsetX,y:s.offsetY});return t.sub(i).len()<=Number.EPSILON?async()=>this.waitForSecondClick(i):async()=>this.makePlaylist(t,i)})(),this.awaitReloadEvent()]);return this.$board.removeEventListener("mousemove",s),i}async awaitReloadEvent(){const t=document.querySelector("#database");return await e(t,"input"),this.databaseFile=t.value,async()=>this.loadDatabase()}makePlaylist(t,s){this.drawAxes(),this.drawPathPreview(t,s);const e=60*Number(this.$duration.value),i=s.sub(t).len()>=.2?this.makeArrowPlaylist(t,s,e):this.makeCirclePlaylist(t,s,e);return async()=>this.displayPlaylist(t,s,i)}makeCirclePlaylist(t,s,e){const i=[];for(const s of this.database.musics)i.push([t.sub(n(s)).len2(),s]);i.sort(((t,s)=>{const[e]=t,[i]=s;return i-e}));const r=[];for(;e>0&&i.length>0;){const[,t]=i.pop();r.push(t),e-=t[a.Duration]}return r}makeArrowPlaylist(s,e,i){const r=[],o=[];let l=this.database.musics[0],h=s.sub(n(l)).len2(),c=this.database.musics[0],u=e.sub(n(c)).len2();for(const i of this.database.musics){const a=n(i),r=t.orthographicProjection(s,e,a),d=r.sub(a).len2();o.push([d,r,i]),s.sub(a).len2()<h&&(l=i,h=s.sub(a).len2()),e.sub(a).len2()<u&&(c=i,u=e.sub(a).len2())}i-=c===l?l[a.Duration]:l[a.Duration]+c[a.Duration],o.sort(((t,s)=>{const[e]=t,[i]=s;return e-i}));const d=[[e.sub(s).len2(),s,e]];for(;i>0&&d.length>0;){let t=d[0][0],e=d[0],n=0;for(const[s,i]of d.slice(1).entries())i[0]>t&&(e=i,t=i[0],n=s+1);d.splice(n,1);const h=e[1],u=e[2];for(const[t,[,e,n]]of o.entries()){if(n===l||n===c)continue;const y=e.sub(h).dot(u.sub(h))/u.sub(h).len2();if(y<=0||y>=1)continue;o.splice(t,1),r.push([e.sub(s).len2(),n]),i-=n[a.Duration];const x=[e.sub(h).len2(),h,e],p=[u.sub(e).len2(),e,u];d.push(x,p);break}}r.sort(((t,s)=>{const[e]=t,[i]=s;return e-i}));const y=r.map((t=>{const[,s]=t;return s}));return y.unshift(l),l!==c&&y.push(c),y}displayPlaylist(t,s,e){const r=document.querySelector("#playlist");if(0===e.length)return r.innerHTML='<p class="user-instruction"><strong>Error:</strong> the server created an empty playlist. Please retry later.</p>',async()=>this.waitForFirstInput();let n='<div class="wrapper"><ul class="music-list">';for(const t of e)n+=`<li class="item playlist-entry">\n          <img class="cover" src="https://i.ytimg.com/vi/${i(t[0])}/mqdefault.jpg" alt="Thumbnail" width="85.33" height="48">\n          <span class="title">${i(t[a.Title])}</span>\n          <span class="artist">${i(t[a.Artist])}</span>\n        </li>`;return n+="</ul></div>",n+=`<p class="youtube-link"><a href="http://www.youtube.com/watch_videos?video_ids=${encodeURI(e.map((t=>t[a.YoutubeId])).join(","))}" target="_blank" rel="noopener">Listen on YouTube</a></p>`,r.innerHTML=n,async()=>this.drawPlaylist(t,s,e)}async drawPlaylist(t,s,e){return this.state=this.drawPlaylist,Promise.race([new Promise((i=>{const a=e.map((t=>n(t))),r=e=>{const i=[];let r=0,n=a[0];const o=[n];i.push(n);for(const t of a.slice(1)){const s=t.sub(n),a=s.len();if(r+=a,e<r){i.push(n.add(s.scale((e+a-r)/a)));break}o.push(t),i.push(t),n=t}this.drawAxes(),this.drawPathPreview(t,s),this.marker.drawPolyLine(i,"#F00");for(const t of o)this.marker.drawPoint(t,4);return e<r};let o=null;const l=t=>{this.state===this.drawPlaylist&&(null===o&&(o=t),r(.001*(t-o))?requestAnimationFrame(l):i((async()=>this.waitForFirstInput())))};requestAnimationFrame(l)})),this.awaitReloadEvent()])}drawAxes(){this.marker.clear(),this.marker.drawArrow({x:-.98,y:0},{x:.98,y:0}),this.marker.drawArrow({x:0,y:-.98},{x:0,y:.98}),this.marker.drawText(this.database.axes[0],{x:-.03,y:-1},"NW"),this.marker.drawText(this.database.axes[1],{x:-.08,y:1},"SW"),this.marker.drawText(this.database.axes[2],{x:-1,y:0},"SE"),this.marker.drawText(this.database.axes[3],{x:.9,y:0},"SW")}drawPathPreview(t,s){const e=s.sub(t).len();e>=.2?this.marker.drawArrow(t,s):e>=Number.EPSILON&&this.marker.drawCircle(t,e,"#000")}}({board:document.querySelector("#board"),duration:document.querySelector("#duration"),tooltip:document.querySelector("#duration-tooltip")}).run()}();
//# sourceMappingURL=index.d6a4a29b.js.map
