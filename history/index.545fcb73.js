!function(){var t,e;(e=t||(t={}))[e.YoutubeId=0]="YoutubeId",e[e.X=1]="X",e[e.Y=2]="Y",e[e.Title=3]="Title",e[e.Artist=4]="Artist",e[e.Duration=5]="Duration";const n=t=>t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");(async()=>{const e=await(await fetch("../db.json")).json(),s=[[e.musics[0],e.musics[e.musics.length-1]]];let o="";for(const e of s){if(e.length<2)continue;const s=e[0],i=e[e.length-1];o+=`<div class="entry">\n      <svg class="image" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="48" height="48" viewBox="-1.2 -1.2 2.4 2.4" xml:space="preserve" style="stroke-width:.1;stroke-linecap:round">\n        <line style="stroke:#000;" x1="-1.1" y1="0" x2="1.1" y2="0"/>\n        <line style="stroke:#000" x1="0" y1="-1.1" x2="0" y2="1.1"/>\n        <line style="stroke:#f00" x1="${s[t.X]}" y1="${-s[t.Y]}" x2="${i[t.X]}" y2="${-i[t.Y]}"/>\n        <circle style="stroke:#f00;fill:#fff" cx="${s[t.X]}" cy="${-s[t.Y]}" r=".1"/>\n        <circle style="stroke:#f00;fill:#fff" cx="${i[t.X]}" cy="${-i[t.Y]}" r=".1"/>\n      </svg>\n      <p class="title">From <strong>${n(s[t.Title])}</strong> to <strong>${n(i[t.Title])}</strong>\n      </p>\n      <p>\n      <a href="http://www.youtube.com/watch_videos?video_ids=${encodeURI(e.map((e=>e[t.YoutubeId])).join(","))}" target="_blank" rel="noopener">Listen on YouTube</a>\n      </p>\n    </div>`}document.querySelector("#playlist-history").innerHTML=o})()}();
//# sourceMappingURL=index.545fcb73.js.map
