{"mappings":"kBAOYA,GAAAA,EAAAC,IAAAA,EAAW,KAAXD,EACD,UAAG,GAAC,YADHA,EAAAA,EAET,EAAG,GAAC,IAFKA,EAAAA,EAGT,EAAG,GAAC,IAHKA,EAAAA,EAIL,MAAG,GAAC,QAJCA,EAAAA,EAKJ,OAAG,GAAC,SALAA,EAAAA,EAMF,SAAG,GAAC,iBCCDE,EAAUC,GACrBA,EACGC,QAAO,KAAA,SACPA,QAAO,KAAA,QACPA,QAAO,KAAA,QACPA,QAAO,KAAA,UChBFC,iBACFC,cAA4BC,MAAK,eAAgBC,OACjDC,EAAS,EAAgBH,EAAGI,OAAO,GAAIJ,EAAGI,OAAOJ,EAAGI,OAAOC,OAAS,SACtEC,EAAI,aACGC,KAAYJ,EAAS,IAC1BI,EAASF,OAAS,EAAC,eACjBG,EAAQD,EAAS,GACjBE,EAAOF,EAASA,EAASF,OAAS,GACxCC,GAAI,ubAIgCE,EAAMb,EAAYe,YAAYF,EAChEb,EAAYgB,WACJF,EAAKd,EAAYe,YAAYD,EAAKd,EAAYgB,4DAElDH,EAAMb,EAAYe,YACVF,EAAMb,EAAYgB,mEAE1BF,EAAKd,EAAYe,YACTD,EAAKd,EAAYgB,mEAEGf,EAC9BY,EAAMb,EAAYiB,+BACKhB,EAAOa,EAAKd,EAAYiB,yGAGQC,UACvDN,EAASO,KAAKC,GAAUA,EAAMpB,EAAYqB,aAAYC,KAAI,sFAMhEC,SAASC,cAAa,qBAAsBC,UAAYd,GAGrDe","sources":["src/db.d.ts","src/lib/html.ts","src/history.ts"],"sourcesContent":["export type Music = [string, number, number, string, string, number]\nexport type Database = {\n  musixy: 1\n  axes: [string, string, string, string]\n  musics: Music[]\n}\n\nexport enum MusicFields {\n  YoutubeId = 0,\n  X = 1,\n  Y = 2,\n  Title = 3,\n  Artist = 4,\n  Duration = 5\n}\n","export const listen = async <K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  eventName: K\n) =>\n  new Promise<HTMLElementEventMap[K]>((resolve) => {\n    element.addEventListener(\n      eventName,\n      (event) => {\n        resolve(event)\n      },\n      {once: true}\n    )\n  })\n\nexport const escape = (string: string) =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n","import {DataBase, MusicFields, Music} from './db.d'\nimport {escape} from './lib/html'\n\nconst main = async () => {\n  const db: DataBase = await (await fetch('../db.json')).json()\n  const playlists: Music[][] = [[db.musics[0], db.musics[db.musics.length - 1]]]\n  let html = ''\n  for (const playlist of playlists) {\n    if (playlist.length < 2) continue\n    const first = playlist[0]\n    const last = playlist[playlist.length - 1]\n    html += `<div class=\"entry\">\n      <svg class=\"image\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"48\" height=\"48\" viewBox=\"-1.2 -1.2 2.4 2.4\" xml:space=\"preserve\" style=\"stroke-width:.1;stroke-linecap:round\">\n        <line style=\"stroke:#000;\" x1=\"-1.1\" y1=\"0\" x2=\"1.1\" y2=\"0\"/>\n        <line style=\"stroke:#000\" x1=\"0\" y1=\"-1.1\" x2=\"0\" y2=\"1.1\"/>\n        <line style=\"stroke:#f00\" x1=\"${first[MusicFields.X]}\" y1=\"${-first[\n      MusicFields.Y\n    ]}\" x2=\"${last[MusicFields.X]}\" y2=\"${-last[MusicFields.Y]}\"/>\n        <circle style=\"stroke:#f00;fill:#fff\" cx=\"${\n          first[MusicFields.X]\n        }\" cy=\"${-first[MusicFields.Y]}\" r=\".1\"/>\n        <circle style=\"stroke:#f00;fill:#fff\" cx=\"${\n          last[MusicFields.X]\n        }\" cy=\"${-last[MusicFields.Y]}\" r=\".1\"/>\n      </svg>\n      <p class=\"title\">From <strong>${escape(\n        first[MusicFields.Title]\n      )}</strong> to <strong>${escape(last[MusicFields.Title])}</strong>\n      </p>\n      <p>\n      <a href=\"http://www.youtube.com/watch_videos?video_ids=${encodeURI(\n        playlist.map((music) => music[MusicFields.YoutubeId]).join(',')\n      )}\" target=\"_blank\" rel=\"noopener\">Listen on YouTube</a>\n      </p>\n    </div>`\n  }\n\n  document.querySelector('#playlist-history').innerHTML = html\n}\n\nvoid main()\n"],"names":["MusicFields","$d056521e609c6c8dd585a17aed2c9f50$export$512e94db3067f2de","$68aa8fbeb24221aedbaa0c8ad21d0d61$export$7b898e4855efaed4","string","replace","async","db","fetch","json","playlists","musics","length","html","playlist","first","last","X","Y","Title","encodeURI","map","music","YoutubeId","join","document","querySelector","innerHTML","$ad370d246a4c67e987060deede84b6a1$var$main"],"version":3,"file":"index.545fcb73.js.map"}