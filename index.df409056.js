!function(){class t{constructor(s,i){if(s instanceof t||s instanceof Object&&"x"in s&&"y"in s)return this.x=s.x,void(this.y=s.y);this.x=s,this.y=i}static orthographicProjection(s,i,e){const n=new t(i).sub(s).normalize();return new t(n.scale(new t(e).sub(s).dot(n))).add(s)}add(s){return new t(this.x+s.x,this.y+s.y)}sub(s){return new t(this.x-s.x,this.y-s.y)}scale(s){return new t(this.x*s,this.y*s)}rotate(s){return new t(this.x*Math.cos(s)-this.y*Math.sin(s),this.x*Math.sin(s)+this.y*Math.cos(s))}len2(){return this.x*this.x+this.y*this.y}len(){return Math.sqrt(this.len2())}dot(t){return t.x*this.x+t.y*this.y}normalize(){const s=this.len();if(s<Number.EPSILON||!s)throw new Error("Division by zero");return new t(this.x/s,this.y/s)}}class s{constructor(t,{x:[s,i],y:[e,n],width:r,height:o,pixelRatio:a}){this.canvas=t,this.context=t.getContext("2d"),this.fromX=s,this.fromY=e,this.toX=i,this.toY=n,this.resize(r,o,a),this.clear()}resize(t,s,i){this.width=t,this.height=s,this.pixelRatio=i,this.canvas.width=t*i,this.canvas.height=s*i,this.canvas.style.width=`${t}px`,this.canvas.style.height=`${s}px`,this.context.lineWidth=3*i}clear(){this.context.clearRect(0,0,this.width*this.pixelRatio,this.height*this.pixelRatio),this.context.lineJoin="round",this.context.lineCap="round",this.context.lineWidth=2*this.pixelRatio,this.context.fillStyle="#000",this.context.strokeStyle="#000"}drawArrow(t,s){const i=this.toCanvasVector(t),e=this.toCanvasVector(s),n=this.context,r=e.sub(i).normalize();n.beginPath(),n.moveTo(i.x,i.y),n.lineTo(e.x-10*r.x,e.y-10*r.y),n.stroke(),n.beginPath(),n.moveTo(e.x,e.y);const o=e.add(r.scale(20*this.pixelRatio).rotate(3*Math.PI/4)),a=e.add(r.scale(20*this.pixelRatio).rotate(5*Math.PI/4));n.lineTo(o.x,o.y),n.lineTo(a.x,a.y),n.closePath(),n.fillStyle="#000",n.fill()}drawPolyLine(t,s=null){const i=this.context;let e=this.toCanvasVector(t[0]);i.beginPath(),i.moveTo(e.x,e.y);for(const s of t.slice(1))e=this.toCanvasVector(s),i.lineTo(e.x,e.y);i.strokeStyle=s,i.stroke()}drawPoint(t,s=10,i=null){const e=this.context,n=this.toCanvasVector(t);e.beginPath(),e.arc(n.x,n.y,s*this.pixelRatio,0,7,!1),e.fillStyle="#fff",e.fill(),e.strokeStyle=i,e.lineWidth=s/2.5*this.pixelRatio,e.stroke()}drawCircle(t,s,i=null){const e=this.context,n=s/(this.toX-this.fromX)*this.width*this.pixelRatio,r=this.toCanvasVector(t);e.beginPath(),e.arc(r.x,r.y,n,0,7,!1),e.fillStyle="#fff",e.fill(),e.strokeStyle=i,e.lineWidth=2,e.stroke()}drawText(t,s,i){const e=this.context,n=5*this.pixelRatio,r=20*this.pixelRatio;e.font=`${r}px "Segoe UI"`;const o=this.toCanvasVector(s),a=e.measureText(t).width;switch(i){case"NE":e.fillText(t,o.x+n,o.y-n);break;case"NW":e.fillText(t,o.x-a-n,o.y-n);break;case"SE":e.fillText(t,o.x+n,o.y+r+n);break;case"SW":e.fillText(t,o.x-a-n,o.y+r+n);break;default:throw new Error("Invalid argument for type Direction")}}toCanvasVector(s){return new t((s.x-this.fromX)/(this.toX-this.fromX)*this.width*this.pixelRatio,(-s.y-this.fromY)/(this.toY-this.fromY)*this.height*this.pixelRatio)}fromCanvasPoint(s){return new t(s.x/this.width*(this.toX-this.fromX)+this.fromX,(1-s.y/this.height)*(this.toY-this.fromY)+this.fromY)}}const i=async(t,s)=>new Promise((i=>{t.addEventListener(s,(t=>{i(t)}),{once:!0})})),e=t=>t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");var n,r;(r=n||(n={}))[r.YoutubeId=0]="YoutubeId",r[r.X=1]="X",r[r.Y=2]="Y",r[r.Title=3]="Title",r[r.Artist=4]="Artist",r[r.Duration=5]="Duration";const o=s=>new t(s[n.X],s[n.Y]);new class{constructor(t){this.board=t,this.marker=new s(t,{x:[-1,1],y:[-1,1],width:400,height:400,pixelRatio:window.devicePixelRatio})}async run(){this.setupSlider(),this.db=await(await fetch("./songs.json")).json();for(let t=0;t<1e3;t++)this.db.musics.push(["l0q7MLPo-u8",2*Math.random()-1,2*Math.random()-1,"The Sound of Silence","Simon & Garfunkel",187]);this.init();let t=this.initialState();for(;;){t=(await t)()}}setupSlider(){this.$duration=document.querySelector("#duration");const t=document.querySelector("#duration-tooltip");this.$duration.addEventListener("input",(()=>{t.innerHTML=`${this.$duration.value} min`}))}init(){this.marker.clear(),this.marker.drawArrow({x:-.98,y:0},{x:.98,y:0}),this.marker.drawArrow({x:0,y:-.98},{x:0,y:.98}),this.marker.drawText(this.db.axes[0],{x:-.03,y:-1},"NW"),this.marker.drawText(this.db.axes[1],{x:-.08,y:1},"SW"),this.marker.drawText(this.db.axes[2],{x:-1,y:0},"SE"),this.marker.drawText(this.db.axes[3],{x:.9,y:0},"SW")}async initialState(){const t=await i(this.board,"click"),s=this.marker.fromCanvasPoint({x:t.offsetX,y:t.offsetY});return async()=>this.state2(s)}async state2(t){const s=s=>{const i=this.marker.fromCanvasPoint({x:s.offsetX,y:s.offsetY});this.init();const e=t.sub(i).len();e>=.2?this.marker.drawArrow(t,i):e>=Number.EPSILON&&this.marker.drawCircle(t,e,"#000")};this.board.addEventListener("mousemove",s);const e=await i(this.board,"click"),n=this.marker.fromCanvasPoint({x:e.offsetX,y:e.offsetY});return this.board.removeEventListener("mousemove",s),t.sub(n).len()<=Number.EPSILON?async()=>this.state2(n):async()=>this.fetchPlaylist(t,n)}async fetchPlaylist(t,s){this.init(),this.marker.drawArrow(t,s);const i=60*Number(this.$duration.value),e=s.sub(t).len()>=.2?this.makePathPlaylist(t,s,i):this.makeCirclePlaylist(t,s,i);return async()=>this.displayPlaylist(t,s,e)}makeCirclePlaylist(t,s,i){const e=[];for(const s of this.db.musics)e.push([t.sub(o(s)).len2(),s]);e.sort(((t,s)=>{const[i]=t,[e]=s;return e-i}));const r=[];for(;i>0&&e.length>0;){const[,t]=e.pop();r.push(t),i-=t[n.Duration]}return r}makePathPlaylist(s,i,e){const r=[],a=this.db.musics,h=[];let l=a[0],c=s.sub(o(l)).len2(),u=a[0],d=i.sub(o(u)).len2();for(const e of a){const n=o(e),r=t.orthographicProjection(s,i,n),a=r.sub(n).len2();h.push([a,r,e]),s.sub(n).len2()<c&&(l=e,c=s.sub(n).len2()),i.sub(n).len2()<d&&(u=e,d=i.sub(n).len2())}e-=u===l?l[n.Duration]:l[n.Duration]+u[n.Duration],h.sort(((t,s)=>{const[i]=t,[e]=s;return i-e}));const y=[[i.sub(s).len2(),s,i]];for(;e>0&&y.length>0;){let t=y[0][0],i=y[0],o=0;for(const[s,e]of y.slice(1).entries())e[0]>t&&(i=e,t=e[0],o=s+1);y.splice(o,1);const a=i[1],c=i[2];for(const[t,[,i,o]]of h.entries()){if(o===l||o===u)continue;const d=i.sub(a).dot(c.sub(a))/c.sub(a).len2();if(d<=0||d>=1)continue;h.splice(t,1),r.push([i.sub(s).len2(),o]),e-=o[n.Duration];const x=[i.sub(a).len2(),a,i],m=[c.sub(i).len2(),i,c];y.push(x,m);break}}r.sort(((t,s)=>{const[i]=t,[e]=s;return i-e}));const x=r.map((t=>{const[,s]=t;return s}));return x.unshift(l),l!==u&&x.push(u),x}async displayPlaylist(t,s,i){const r=document.querySelector("#playlist");if(0===i.length)return r.innerHTML='<p class="user-instruction"><strong>Error:</strong> the server created an empty playlist. Please retry later.</p>',async()=>this.initialState();let o='<div class="wrapper"><ul class="music-list">';for(const t of i)o+=`<li class="item playlist-entry">\n          <img class="cover" src="https://i.ytimg.com/vi/${e(t[0])}/mqdefault.jpg" alt="Thumbnail" width="85.33" height="48">\n          <span class="title">${e(t[n.Title])}</span>\n          <span class="artist">${e(t[n.Artist])}</span>\n        </li>`;return o+="</ul></div>",o+=`<p class="youtube-link"><a href="http://www.youtube.com/watch_videos?video_ids=${encodeURI(i.map((t=>t[n.YoutubeId])).join(","))}" target="_blank" rel="noopener">Listen on YouTube</a></p>`,r.innerHTML=o,async()=>this.drawPlaylist(t,s,i)}async drawPlaylist(s,i,e){return new Promise((n=>{const r=e.map((s=>new t(o(s)))),a=t=>{const e=[];let n=0,o=r[0];const a=[o];e.push(o);for(const s of r.slice(1)){const i=s.sub(o),r=i.len();if(n+=r,t<n){e.push(o.add(i.scale((t+r-n)/r)));break}a.push(s),e.push(s),o=s}this.init();const h=s.sub(i).len();h>=.2?this.marker.drawArrow(s,i):h>=Number.EPSILON&&this.marker.drawCircle(s,h,"#000"),this.marker.drawPolyLine(e,"#F00");for(const t of a)this.marker.drawPoint(t,4);return t<n};let h=null;const l=t=>{null===h&&(h=t),a(.001*(t-h))?requestAnimationFrame(l):n((async()=>this.initialState()))};requestAnimationFrame(l)}))}}(document.querySelector("#board")).run()}();
//# sourceMappingURL=index.df409056.js.map
