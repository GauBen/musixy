!function(){class t{constructor(s,e){if(s instanceof t||s instanceof Object&&"x"in s&&"y"in s)return this.x=s.x,void(this.y=s.y);this.x=s,this.y=e}static orthographicProjection(s,e,i){const r=new t(e).sub(s).normalize();return new t(r.scale(new t(i).sub(s).dot(r))).add(s)}add(s){return new t(this.x+s.x,this.y+s.y)}sub(s){return new t(this.x-s.x,this.y-s.y)}scale(s){return new t(this.x*s,this.y*s)}rotate(s){return new t(this.x*Math.cos(s)-this.y*Math.sin(s),this.x*Math.sin(s)+this.y*Math.cos(s))}len2(){return this.x*this.x+this.y*this.y}len(){return Math.sqrt(this.len2())}dot(t){return t.x*this.x+t.y*this.y}normalize(){const s=this.len();if(s<Number.EPSILON||!s)throw new Error("Division by zero");return new t(this.x/s,this.y/s)}}class s{constructor(t,{x:[s,e],y:[i,r],pixelsPerUnit:a,pixelRatio:n}){this.canvas=t,this.context=t.getContext("2d"),this.fromX=s,this.fromY=i,this.toX=e,this.toY=r,this.resize(a,n),this.clear()}resize(t,s){this.pixelsPerUnit=t,this.pixelRatio=s,this.canvas.width=(this.toX-this.fromX)*t*s,this.canvas.height=(this.toY-this.fromY)*t*s,this.canvas.style.width=(this.toX-this.fromX)*t+"px",this.canvas.style.height=(this.toY-this.fromY)*t+"px",this.context.lineWidth=3*s}clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.lineJoin="round",this.context.lineCap="round",this.context.lineWidth=2*this.pixelRatio,this.context.fillStyle="#000",this.context.strokeStyle="#000"}drawArrow(t,s){const e=this.toCanvasVector(t),i=this.toCanvasVector(s),r=this.context,a=i.sub(e).normalize();r.beginPath(),r.moveTo(e.x,e.y),r.lineTo(i.x-10*a.x,i.y-10*a.y),r.stroke(),r.beginPath(),r.moveTo(i.x,i.y);const n=i.add(a.scale(20*this.pixelRatio).rotate(3*Math.PI/4)),o=i.add(a.scale(20*this.pixelRatio).rotate(5*Math.PI/4));r.lineTo(n.x,n.y),r.lineTo(o.x,o.y),r.closePath(),r.fillStyle="#000",r.fill()}drawPolyLine(t,s=null){const e=this.context;let i=this.toCanvasVector(t[0]);e.beginPath(),e.moveTo(i.x,i.y);for(const s of t.slice(1))i=this.toCanvasVector(s),e.lineTo(i.x,i.y);e.strokeStyle=s,e.stroke()}drawPoint(t,s=10,e=null){const i=this.context,r=this.toCanvasVector(t);i.beginPath(),i.arc(r.x,r.y,s*this.pixelRatio,0,7,!1),i.fillStyle="#fff",i.fill(),i.strokeStyle=e,i.lineWidth=s/2.5*this.pixelRatio,i.stroke()}drawCircle(t,s,e=null){const i=this.context,r=s*this.pixelsPerUnit*this.pixelRatio,a=this.toCanvasVector(t);i.beginPath(),i.arc(a.x,a.y,r,0,7,!1),i.fillStyle="#fff",i.fill(),i.strokeStyle=e,i.lineWidth=2,i.stroke()}drawText(t,s,e){const i=this.context,r=5*this.pixelRatio,a=20*this.pixelRatio;i.font=`${a}px "Segoe UI"`;const n=this.toCanvasVector(s),o=i.measureText(t).width;switch(e){case"NE":i.fillText(t,n.x+r,n.y-r);break;case"NW":i.fillText(t,n.x-o-r,n.y-r);break;case"SE":i.fillText(t,n.x+r,n.y+a+r);break;case"SW":i.fillText(t,n.x-o-r,n.y+a+r);break;default:throw new Error("Invalid argument for type Direction")}}toCanvasVector(s){return new t((s.x-this.fromX)*this.pixelsPerUnit*this.pixelRatio,(-s.y-this.fromY)*this.pixelsPerUnit*this.pixelRatio)}fromCanvasPoint(s){return new t(s.x/this.pixelsPerUnit+this.fromX,(this.canvas.height-s.y)/this.pixelsPerUnit+this.fromY)}}const e=async(t,s)=>new Promise((e=>{t.addEventListener(s,(t=>{e(t)}),{once:!0})})),i=t=>t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");var r,a;(a=r||(r={}))[a.YoutubeId=0]="YoutubeId",a[a.X=1]="X",a[a.Y=2]="Y",a[a.Title=3]="Title",a[a.Artist=4]="Artist",a[a.Duration=5]="Duration";const n=s=>new t(s[r.X],s[r.Y]);new class{constructor({board:t,duration:e,tooltip:i}){this.$board=t,this.$duration=e,this.$tooltip=i,this.marker=new s(t,{x:[-1,1],y:[-1,1],pixelsPerUnit:200,pixelRatio:window.devicePixelRatio}),this.$tooltip.innerHTML=`${this.$duration.value} min`,this.$duration.addEventListener("input",(()=>{this.$tooltip.innerHTML=`${this.$duration.value} min`}))}async run(){let t=this.loadDatabase();for(;;){t=(await t)()}}async loadDatabase(){this.database=await(await fetch("./db.json")).json();for(let t=0;t<1e3;t++)this.database.musics.push(["l0q7MLPo-u8",2*Math.random()-1,2*Math.random()-1,"The Sound of Silence","Simon & Garfunkel",187]);return this.drawAxes(),async()=>this.waitForFirstInput()}async waitForFirstInput(){const t=await e(this.$board,"click"),s=this.marker.fromCanvasPoint({x:t.offsetX,y:t.offsetY});return async()=>this.waitForSecondClick(s)}async waitForSecondClick(t){const s=s=>{const e=this.marker.fromCanvasPoint({x:s.offsetX,y:s.offsetY});this.drawAxes(),this.drawPathPreview(t,e)};this.$board.addEventListener("mousemove",s);const i=await e(this.$board,"click"),r=this.marker.fromCanvasPoint({x:i.offsetX,y:i.offsetY});return this.$board.removeEventListener("mousemove",s),t.sub(r).len()<=Number.EPSILON?async()=>this.waitForSecondClick(r):async()=>this.makePlaylist(t,r)}async makePlaylist(t,s){this.drawAxes(),this.drawPathPreview(t,s);const e=60*Number(this.$duration.value),i=s.sub(t).len()>=.2?this.makeArrowPlaylist(t,s,e):this.makeCirclePlaylist(t,s,e);return async()=>this.displayPlaylist(t,s,i)}makeCirclePlaylist(t,s,e){const i=[];for(const s of this.database.musics)i.push([t.sub(n(s)).len2(),s]);i.sort(((t,s)=>{const[e]=t,[i]=s;return i-e}));const a=[];for(;e>0&&i.length>0;){const[,t]=i.pop();a.push(t),e-=t[r.Duration]}return a}makeArrowPlaylist(s,e,i){const a=[],o=[];let l=this.database.musics[0],h=s.sub(n(l)).len2(),c=this.database.musics[0],u=e.sub(n(c)).len2();for(const i of this.database.musics){const r=n(i),a=t.orthographicProjection(s,e,r),d=a.sub(r).len2();o.push([d,a,i]),s.sub(r).len2()<h&&(l=i,h=s.sub(r).len2()),e.sub(r).len2()<u&&(c=i,u=e.sub(r).len2())}i-=c===l?l[r.Duration]:l[r.Duration]+c[r.Duration],o.sort(((t,s)=>{const[e]=t,[i]=s;return e-i}));const d=[[e.sub(s).len2(),s,e]];for(;i>0&&d.length>0;){let t=d[0][0],e=d[0],n=0;for(const[s,i]of d.slice(1).entries())i[0]>t&&(e=i,t=i[0],n=s+1);d.splice(n,1);const h=e[1],u=e[2];for(const[t,[,e,n]]of o.entries()){if(n===l||n===c)continue;const x=e.sub(h).dot(u.sub(h))/u.sub(h).len2();if(x<=0||x>=1)continue;o.splice(t,1),a.push([e.sub(s).len2(),n]),i-=n[r.Duration];const y=[e.sub(h).len2(),h,e],m=[u.sub(e).len2(),e,u];d.push(y,m);break}}a.sort(((t,s)=>{const[e]=t,[i]=s;return e-i}));const x=a.map((t=>{const[,s]=t;return s}));return x.unshift(l),l!==c&&x.push(c),x}async displayPlaylist(t,s,e){const a=document.querySelector("#playlist");if(0===e.length)return a.innerHTML='<p class="user-instruction"><strong>Error:</strong> the server created an empty playlist. Please retry later.</p>',async()=>this.waitForFirstInput();let n='<div class="wrapper"><ul class="music-list">';for(const t of e)n+=`<li class="item playlist-entry">\n          <img class="cover" src="https://i.ytimg.com/vi/${i(t[0])}/mqdefault.jpg" alt="Thumbnail" width="85.33" height="48">\n          <span class="title">${i(t[r.Title])}</span>\n          <span class="artist">${i(t[r.Artist])}</span>\n        </li>`;return n+="</ul></div>",n+=`<p class="youtube-link"><a href="http://www.youtube.com/watch_videos?video_ids=${encodeURI(e.map((t=>t[r.YoutubeId])).join(","))}" target="_blank" rel="noopener">Listen on YouTube</a></p>`,a.innerHTML=n,async()=>this.drawPlaylist(t,s,e)}async drawPlaylist(t,s,e){return new Promise((i=>{const r=e.map((t=>n(t))),a=e=>{const i=[];let a=0,n=r[0];const o=[n];i.push(n);for(const t of r.slice(1)){const s=t.sub(n),r=s.len();if(a+=r,e<a){i.push(n.add(s.scale((e+r-a)/r)));break}o.push(t),i.push(t),n=t}this.drawAxes(),this.drawPathPreview(t,s),this.marker.drawPolyLine(i,"#F00");for(const t of o)this.marker.drawPoint(t,4);return e<a};let o=null;const l=t=>{null===o&&(o=t),a(.001*(t-o))?requestAnimationFrame(l):i((async()=>this.waitForFirstInput()))};requestAnimationFrame(l)}))}drawAxes(){this.marker.clear(),this.marker.drawArrow({x:-.98,y:0},{x:.98,y:0}),this.marker.drawArrow({x:0,y:-.98},{x:0,y:.98}),this.marker.drawText(this.database.axes[0],{x:-.03,y:-1},"NW"),this.marker.drawText(this.database.axes[1],{x:-.08,y:1},"SW"),this.marker.drawText(this.database.axes[2],{x:-1,y:0},"SE"),this.marker.drawText(this.database.axes[3],{x:.9,y:0},"SW")}drawPathPreview(t,s){const e=s.sub(t).len();e>=.2?this.marker.drawArrow(t,s):e>=Number.EPSILON&&this.marker.drawCircle(t,e,"#000")}}({board:document.querySelector("#board"),duration:document.querySelector("#duration"),tooltip:document.querySelector("#duration-tooltip")}).run()}();
//# sourceMappingURL=index.5e18010b.js.map
