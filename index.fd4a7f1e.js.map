{"mappings":"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","sources":["assets/app/marker.ts","assets/app/app.ts","assets/playlist.json","assets/app/home-app.ts"],"sourcesContent":["export interface MarkerSettings {\n  x: [number, number]\n  y: [number, number]\n  width: number\n  height: number\n  pixelRatio: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport type Direction = 'NE' | 'NW' | 'SE' | 'SW'\n\nexport class Vector implements Point {\n  readonly x: number\n  readonly y: number\n\n  constructor(x: number, y: number)\n  constructor(v: Vector | Point)\n  constructor(x: number | Vector | Point, y: number | undefined = undefined) {\n    if (x instanceof Vector || (x instanceof Object && 'x' in x && 'y' in x)) {\n      this.x = x.x\n      this.y = x.y\n      return\n    }\n\n    this.x = x\n    this.y = y\n  }\n\n  add(v: Vector) {\n    return new Vector(this.x + v.x, this.y + v.y)\n  }\n\n  sub(v: Vector) {\n    return new Vector(this.x - v.x, this.y - v.y)\n  }\n\n  scale(s: number) {\n    return new Vector(this.x * s, this.y * s)\n  }\n\n  rotate(theta: number) {\n    return new Vector(\n      this.x * Math.cos(theta) - this.y * Math.sin(theta),\n      this.x * Math.sin(theta) + this.y * Math.cos(theta)\n    )\n  }\n\n  len2() {\n    return this.x * this.x + this.y * this.y\n  }\n\n  len() {\n    return Math.sqrt(this.len2())\n  }\n\n  normalize() {\n    return new Vector(this.x / this.len(), this.y / this.len())\n  }\n}\n\nexport class Marker {\n  protected canvas: HTMLCanvasElement\n  protected context: CanvasRenderingContext2D\n\n  protected fromX: number\n  protected fromY: number\n  protected toX: number\n  protected toY: number\n\n  protected width: number\n  protected height: number\n  protected pixelRatio: number\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    {\n      x: [fromX, toX],\n      y: [fromY, toY],\n      width,\n      height,\n      pixelRatio\n    }: MarkerSettings\n  ) {\n    this.canvas = canvas\n    this.context = canvas.getContext('2d')\n\n    this.fromX = fromX\n    this.fromY = fromY\n    this.toX = toX\n    this.toY = toY\n\n    this.resize(width, height, pixelRatio)\n    this.clear()\n  }\n\n  resize(width: number, height: number, pixelRatio: number) {\n    this.width = width\n    this.height = height\n    this.pixelRatio = pixelRatio\n\n    this.canvas.width = width * pixelRatio\n    this.canvas.height = height * pixelRatio\n    this.canvas.style.width = `${width}px`\n    this.canvas.style.height = `${height}px`\n\n    this.context.lineWidth = 3 * pixelRatio\n  }\n\n  clear() {\n    this.context.clearRect(\n      0,\n      0,\n      this.width * this.pixelRatio,\n      this.height * this.pixelRatio\n    )\n    this.context.lineJoin = 'round'\n    this.context.lineCap = 'round'\n    this.context.lineWidth = 2 * this.pixelRatio\n    this.context.fillStyle = '#000'\n    this.context.strokeStyle = '#000'\n  }\n\n  drawArrow(from: Point, to: Point) {\n    const canvasFrom = this.toCanvasVector(from)\n    const canvasTo = this.toCanvasVector(to)\n    const ctx = this.context\n    const arrow = canvasTo.sub(canvasFrom).normalize()\n    ctx.beginPath()\n    ctx.moveTo(canvasFrom.x, canvasFrom.y)\n    ctx.lineTo(canvasTo.x - arrow.x * 10, canvasTo.y - arrow.y * 10)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.moveTo(canvasTo.x, canvasTo.y)\n    const firstPoint = canvasTo.add(\n      arrow.scale(20 * this.pixelRatio).rotate((3 * Math.PI) / 4)\n    )\n    const secondPoint = canvasTo.add(\n      arrow.scale(20 * this.pixelRatio).rotate((5 * Math.PI) / 4)\n    )\n    ctx.lineTo(firstPoint.x, firstPoint.y)\n    ctx.lineTo(secondPoint.x, secondPoint.y)\n    ctx.closePath()\n    ctx.fillStyle = '#000'\n    ctx.fill()\n  }\n\n  drawPolyLine(\n    points: Point[],\n    color: string | CanvasGradient | CanvasPattern = null\n  ) {\n    const ctx = this.context\n\n    let canvasVector = this.toCanvasVector(points[0])\n    ctx.beginPath()\n    ctx.moveTo(canvasVector.x, canvasVector.y)\n\n    for (const point of points.slice(1)) {\n      canvasVector = this.toCanvasVector(point)\n      ctx.lineTo(canvasVector.x, canvasVector.y)\n    }\n\n    ctx.strokeStyle = color\n    ctx.stroke()\n  }\n\n  drawPoint(\n    point: Point,\n    radius = 10,\n    color: string | CanvasGradient | CanvasPattern = null\n  ) {\n    const ctx = this.context\n\n    const center = this.toCanvasVector(point)\n    ctx.beginPath()\n    ctx.arc(center.x, center.y, radius * this.pixelRatio, 0, 7, false)\n    ctx.fillStyle = '#fff'\n    ctx.fill()\n    ctx.strokeStyle = color\n    ctx.lineWidth = (radius / 2.5) * this.pixelRatio\n    ctx.stroke()\n  }\n\n  drawText(text: string, point: Point, direction: Direction) {\n    const ctx = this.context\n    const margin = 5 * this.pixelRatio\n    const h = 20 * this.pixelRatio\n    ctx.font = `${h}px \"Segoe UI\"`\n    const vect = this.toCanvasVector(point)\n    const w = ctx.measureText(text).width\n\n    switch (direction) {\n      case 'NE':\n        ctx.fillText(text, vect.x + margin, vect.y - margin)\n        break\n\n      case 'NW':\n        ctx.fillText(text, vect.x - w - margin, vect.y - margin)\n        break\n\n      case 'SE':\n        ctx.fillText(text, vect.x + margin, vect.y + h + margin)\n        break\n\n      case 'SW':\n        ctx.fillText(text, vect.x - w - margin, vect.y + h + margin)\n        break\n\n      default:\n        throw new Error('Invalid argument for type Direction')\n    }\n  }\n\n  toCanvasVector(point: Point): Vector {\n    return new Vector(\n      ((point.x - this.fromX) / (this.toX - this.fromX)) *\n        this.width *\n        this.pixelRatio,\n      ((-point.y - this.fromY) / (this.toY - this.fromY)) *\n        this.height *\n        this.pixelRatio\n    )\n  }\n\n  fromCanvasPoint(point: Point): Vector {\n    return new Vector(\n      (point.x / this.width) * (this.toX - this.fromX) + this.fromX,\n      (1 - point.y / this.height) * (this.toY - this.fromY) + this.fromY\n    )\n  }\n}\n","import {Marker, Point} from './marker'\n\nexport type Playlist = Array<{\n  x: number\n  y: number\n  youtubeId: string\n  title: string\n  artist: string\n  duration: number\n}>\n\nexport type ContributionData = {\n  x: number\n  y: number\n  youtubeId: string\n  token?: string\n}\n\nexport type MakePlaylistData = {\n  from: Point\n  to: Point\n  duration: number\n  token?: string\n}\n\nexport type state = Promise<() => state>\n\nexport const listen = async <K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  eventName: K\n) =>\n  new Promise<HTMLElementEventMap[K]>((resolve) => {\n    element.addEventListener(\n      eventName,\n      (event) => {\n        resolve(event)\n      },\n      {once: true}\n    )\n  })\n\nexport const escapeHtml = (string: string) =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n\nexport abstract class App {\n  protected board: HTMLCanvasElement\n  protected marker: Marker\n\n  constructor(board: HTMLCanvasElement) {\n    this.board = board\n    this.marker = new Marker(board, {\n      x: [-1, 1],\n      y: [-1, 1],\n      width: 400,\n      height: 400,\n      pixelRatio: window.devicePixelRatio\n    })\n    this.init()\n  }\n\n  init() {\n    this.marker.clear()\n    this.marker.drawArrow({x: -0.98, y: 0}, {x: 0.98, y: 0})\n    this.marker.drawArrow({x: 0, y: -0.98}, {x: 0, y: 0.98})\n    this.marker.drawText('Sad', {x: -0.03, y: -1}, 'NW')\n    this.marker.drawText('Happy', {x: -0.08, y: 1}, 'SW')\n    this.marker.drawText('Calm', {x: -1, y: 0}, 'SE')\n    this.marker.drawText('Energetic', {x: 0.9, y: 0}, 'SW')\n  }\n\n  run() {\n    throw new Error('Unimplemented exception')\n  }\n}\n","module.exports = JSON.parse(\"[{\\\"x\\\":-0.6,\\\"y\\\":-0.55,\\\"youtubeId\\\":\\\"RbDsOdxZZ94\\\",\\\"title\\\":\\\"My Way\\\",\\\"artist\\\":\\\"Tom Walker\\\",\\\"duration\\\":237},{\\\"x\\\":-0.5,\\\"y\\\":-0.5,\\\"youtubeId\\\":\\\"cO3UI8T4O5M\\\",\\\"title\\\":\\\"Drugs\\\",\\\"artist\\\":\\\"EDEN\\\",\\\"duration\\\":339},{\\\"x\\\":-0.2,\\\"y\\\":-0.3,\\\"youtubeId\\\":\\\"hiOkMt7iJ7g\\\",\\\"title\\\":\\\"Enough\\\",\\\"artist\\\":\\\"The Tech Thieves\\\",\\\"duration\\\":202},{\\\"x\\\":0.1,\\\"y\\\":0.05,\\\"youtubeId\\\":\\\"Fxnl4L8vfKA\\\",\\\"title\\\":\\\"Kings & Queens\\\",\\\"artist\\\":\\\"Mat Kearney\\\",\\\"duration\\\":190},{\\\"x\\\":0.2,\\\"y\\\":0.2,\\\"youtubeId\\\":\\\"Z47pGUpMy-E\\\",\\\"title\\\":\\\"Wake Up\\\",\\\"artist\\\":\\\"EDEN\\\",\\\"duration\\\":280},{\\\"x\\\":0.5,\\\"y\\\":0.3,\\\"youtubeId\\\":\\\"FVFf1-oBl8c\\\",\\\"title\\\":\\\"Play Me Like A Violin\\\",\\\"artist\\\":\\\"Stephen\\\",\\\"duration\\\":233},{\\\"x\\\":0.6,\\\"y\\\":0.5,\\\"youtubeId\\\":\\\"mZE6giedL3Q\\\",\\\"title\\\":\\\"Reason\\\",\\\"artist\\\":\\\"Matthew Chaim\\\",\\\"duration\\\":201}]\");","import {Point, Vector} from './marker'\nimport {App, state, Playlist, escapeHtml, listen} from './app'\nimport playlist from '../playlist.json'\n\nexport class HomeApp extends App {\n  $duration: HTMLInputElement\n  async run() {\n    this.setupSlider()\n    let state: state = this.initialState()\n    while (true) {\n      const transition: () => state = await state\n      state = transition()\n    }\n  }\n\n  setupSlider() {\n    this.$duration = document.querySelector('#duration')\n    const $tooltip = document.querySelector('#duration-tooltip')\n    this.$duration.addEventListener('input', () => {\n      $tooltip.innerHTML = `${this.$duration.value} min`\n    })\n  }\n\n  async initialState(): state {\n    const event = await listen(this.board, 'click')\n    const point: Point = this.marker.fromCanvasPoint({\n      x: event.offsetX,\n      y: event.offsetY\n    })\n    return async () => this.state2(point)\n  }\n\n  async state2(lastPoint: Point): state {\n    const drawArrow = (event: MouseEvent) => {\n      const point: Point = this.marker.fromCanvasPoint({\n        x: event.offsetX,\n        y: event.offsetY\n      })\n      this.init()\n      this.marker.drawArrow(lastPoint, point)\n    }\n\n    this.board.addEventListener('mousemove', drawArrow)\n\n    const event = await listen(this.board, 'click')\n    const point: Point = this.marker.fromCanvasPoint({\n      x: event.offsetX,\n      y: event.offsetY\n    })\n    this.board.removeEventListener('mousemove', drawArrow)\n    return async () => this.fetchPlaylist(lastPoint, point)\n  }\n\n  async fetchPlaylist(from: Point, to: Point): state {\n    this.init()\n    this.marker.drawArrow(from, to)\n    return async () => this.displayPlaylist(from, to, playlist as Playlist)\n  }\n\n  async displayPlaylist(from: Point, to: Point, playlist: Playlist): state {\n    const $playlist = document.querySelector('#playlist')\n\n    if (playlist.length === 0) {\n      $playlist.innerHTML =\n        '<p class=\"user-instruction\"><strong>Error:</strong> the server created an empty playlist. Please retry later.</p>'\n      return async () => this.initialState()\n    }\n\n    let html = '<div class=\"wrapper\"><ul class=\"music-list\">'\n\n    for (const music of playlist) {\n      html += `<li class=\"item playlist-entry\">\n          <img class=\"cover\" src=\"https://i.ytimg.com/vi/${escapeHtml(\n            music.youtubeId\n          )}/mqdefault.jpg\" alt=\"Thumbnail\" width=\"85.33\" height=\"48\">\n          <span class=\"title\">${escapeHtml(music.title)}</span>\n          <span class=\"artist\">${escapeHtml(music.artist)}</span>\n        </li>`\n    }\n\n    html += '</ul></div>'\n    html += `<p class=\"youtube-link\"><a href=\"http://www.youtube.com/watch_videos?video_ids=${encodeURI(\n      playlist.map((music) => music.youtubeId).join(',')\n    )}\" target=\"_blank\" rel=\"noopener\">Listen on YouTube</a></p>`\n    $playlist.innerHTML = html\n\n    return async () => this.drawPlaylist(from, to, playlist)\n  }\n\n  async drawPlaylist(from: Point, to: Point, playlist: Playlist): state {\n    return new Promise((resolve) => {\n      const vectors = playlist.map((music) => new Vector(music))\n\n      const draw = (time: number) => {\n        const chain: Vector[] = []\n        let cumulatedLength = 0\n        let previous = vectors[0]\n        const dots = [previous]\n        chain.push(previous)\n\n        for (const vector of vectors.slice(1)) {\n          const delta = vector.sub(previous)\n          const length = delta.len()\n          cumulatedLength += length\n\n          if (time < cumulatedLength) {\n            chain.push(\n              previous.add(\n                delta.scale((time + length - cumulatedLength) / length)\n              )\n            )\n            break\n          }\n\n          dots.push(vector)\n          chain.push(vector)\n          previous = vector\n        }\n\n        this.init()\n        this.marker.drawArrow(from, to)\n        this.marker.drawPolyLine(chain, '#F00')\n        for (const dot of dots) this.marker.drawPoint(dot, 4)\n        return time < cumulatedLength\n      }\n\n      let start = null\n      const frame = (t: number) => {\n        if (start === null) start = t\n        if (draw((t - start) * 0.001)) {\n          requestAnimationFrame(frame)\n        } else {\n          resolve(async () => this.initialState())\n        }\n      }\n\n      requestAnimationFrame(frame)\n    })\n  }\n}\n\nconst app = new HomeApp(document.querySelector('#board'))\nvoid app.run()\n"],"names":["$fe2deee094054b1c4f73628f7e1a20fe$export$a00f0b081d75722f","x","y","Object","[object Object]","v","this","s","theta","Math","cos","sin","sqrt","len2","len","$fe2deee094054b1c4f73628f7e1a20fe$export$d9f9145a3d2de879","canvas","fromX","toX","fromY","toY","width","width1","height","height1","pixelRatio","pixelRatio1","context","getContext","resize","clear","style","lineWidth","clearRect","lineJoin","lineCap","fillStyle","strokeStyle","from","to","canvasFrom","toCanvasVector","canvasTo","ctx","arrow","sub","normalize","beginPath","moveTo","lineTo","stroke","firstPoint","add","scale","rotate","PI","secondPoint","closePath","fill","points","color","canvasVector","point","slice","radius","center","arc","text","direction","margin","h","font","vect","w","measureText","fillText","Error","$a27cc13473502718283eb3243d23c944$export$ff95bcce2965a200","async","element","eventName","Promise","resolve","addEventListener","event","once","$a27cc13473502718283eb3243d23c944$export$5e20d0a3120d6c07","string","replace","$579479ced6690141a806d9cff6d21d22$exports","JSON","parse","board","marker","window","devicePixelRatio","init","drawArrow","drawText","setupSlider","state","initialState","$duration","document","querySelector","$tooltip","innerHTML","value","fromCanvasPoint","offsetX","offsetY","state2","lastPoint","removeEventListener","fetchPlaylist","displayPlaylist","$parcel$interopDefault","playlist","$playlist","length","html","music","youtubeId","title","artist","encodeURI","map","music1","join","drawPlaylist","vectors","draw","time","chain","cumulatedLength","previous","dots","push","vector","delta","drawPolyLine","dot","drawPoint","start","frame","t","requestAnimationFrame","run"],"version":3,"file":"index.fd4a7f1e.js.map"}